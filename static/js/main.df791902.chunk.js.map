{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","s","statistic","item","value","style","color","FeedbackOptions","options","onLeaveFeedback","map","btn","index","type","onClick","Section","title","children","container","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","values","reduce","acc","totalValueFeedback","totalValuePercentage","percentage","Math","ceil","countPositiveFeedbackPercentage","feedBackOptionsArr","keys","e","target","textContent","prevGood","prevNeutral","prevBad","console","log","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sNAyCeA,EArCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,oBAAGF,UAAWC,IAAEE,KAAhB,mBACQ,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BT,OAEnC,oBAAGK,UAAWC,IAAEE,KAAhB,sBACW,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BR,OAEtC,oBAAGI,UAAWC,IAAEE,KAAhB,kBACO,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BP,OAElC,oBAAGG,UAAWC,IAAEE,KAAhB,oBACS,sBAAMH,UAAWC,IAAEG,MAAnB,SAA2BN,OAEpC,oBAAGE,UAAWC,IAAEE,KAAhB,+BAEE,sBACEH,UAAWC,IAAEG,MACbC,MAAO,CAAEC,MAAOP,GAAsB,GAAK,QAAU,OAFvD,SAIGA,IANL,W,gBCMSQ,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAACC,EAAKC,GAAN,OACX,wBACEZ,UAAWC,IAAEU,IAEbE,KAAK,OACLC,QAASL,EAJX,SAMGE,GAJIC,S,gBCOAG,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASjB,UAAWC,IAAEiB,UAAtB,UACE,oBAAIlB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,MCGQE,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCEE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAO3B,EAAP,KAAa4B,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB4B,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOzB,EAAP,KAAY4B,EAAZ,KAuBMC,EAAqB,WAQzB,OAPmBC,OAAOC,OAAO,CAAEjC,OAAMC,UAASC,QAAOgC,QACvD,SAACC,EAAK1B,GACJ,OAAO0B,EAAM1B,IAEf,IAWE2B,EAAqBL,IACrBM,EANkC,WACtC,IAAMC,EAAaC,KAAKC,KAAMxC,EAAO+B,IAAwB,KAC7D,OAAOO,GAA0B,EAING,GACvBC,EAAqBV,OAAOW,KAAK,CAAE3C,OAAMC,UAASC,QAExD,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAAS6B,EACT5B,gBA9CgB,SAAA8B,GAEtB,OADuBA,EAAEC,OAAOC,aAE9B,IAAK,OACHlB,GAAQ,SAAAmB,GAAQ,OAAIA,EAAW,KAE/B,MACF,IAAK,UACHlB,GAAW,SAAAmB,GAAW,OAAIA,EAAc,KAExC,MACF,IAAK,MACHlB,GAAO,SAAAmB,GAAO,OAAIA,EAAU,KAE5B,MACF,QACEC,QAAQC,IAAI,eAiCd,cAAC,EAAD,CAAS9B,MAAM,aAAf,SAC0B,IAAvBe,EACC,cAAC,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,EACPhC,mBAAoBiC,SChEhCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5B,EAAD,MAEF6B,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B,kBCA1DD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.df791902.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.statistic}>\n      <p className={s.item}>\n        good: <span className={s.value}>{good}</span>\n      </p>\n      <p className={s.item}>\n        neutral: <span className={s.value}>{neutral}</span>\n      </p>\n      <p className={s.item}>\n        bad: <span className={s.value}>{bad}</span>\n      </p>\n      <p className={s.item}>\n        total: <span className={s.value}>{total}</span>\n      </p>\n      <p className={s.item}>\n        Positive Feedback:\n        <span\n          className={s.value}\n          style={{ color: positivePercentage >= 50 ? 'green' : 'red' }}\n        >\n          {positivePercentage}\n        </span>\n        %\n      </p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((btn, index) => (\n        <button\n          className={s.btn}\n          key={index}\n          type=\"text\"\n          onClick={onLeaveFeedback}\n        >\n          {btn}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = e => {\n    const feedbackButton = e.target.textContent;\n    switch (feedbackButton) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n\n        break;\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n\n        break;\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n\n        break;\n      default: {\n        console.log('hello');\n      }\n    }\n  };\n\n  const countTotalFeedback = () => {\n    const totalValue = Object.values({ good, neutral, bad }).reduce(\n      (acc, value) => {\n        return acc + value;\n      },\n      0,\n    );\n\n    return totalValue;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = Math.ceil((good / countTotalFeedback()) * 100);\n    return percentage ? percentage : 0;\n  };\n\n  const totalValueFeedback = countTotalFeedback();\n  const totalValuePercentage = countPositiveFeedbackPercentage();\n  const feedBackOptionsArr = Object.keys({ good, neutral, bad });\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={feedBackOptionsArr}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {totalValueFeedback === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalValueFeedback}\n            positivePercentage={totalValuePercentage}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\",\"value\":\"Statistics_value__2eXJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__37ABw\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};"],"sourceRoot":""}